var cov_willyrdoo=function(){var path="/home/martingarcia/bootcamp/colab/skylab-bootcamp-201909/staff/martin-garcia/theatera/theatera-api/logic/update-user/index.spec.js";var hash="f0edbc22e3118eebf40feca02c95e257b8eaeac9";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/martingarcia/bootcamp/colab/skylab-bootcamp-201909/staff/martin-garcia/theatera/theatera-api/logic/update-user/index.spec.js",statementMap:{"0":{start:{line:1,column:0},end:{line:1,column:26}},"1":{start:{line:2,column:33},end:{line:2,column:40}},"2":{start:{line:3,column:19},end:{line:3,column:34}},"3":{start:{line:4,column:19},end:{line:4,column:23}},"4":{start:{line:5,column:19},end:{line:5,column:31}},"5":{start:{line:6,column:52},end:{line:6,column:76}},"6":{start:{line:7,column:63},end:{line:7,column:87}},"7":{start:{line:13,column:0},end:{line:227,column:2}},"8":{start:{line:14,column:4},end:{line:14,column:47}},"9":{start:{line:14,column:17},end:{line:14,column:46}},"10":{start:{line:18,column:4},end:{line:39,column:6}},"11":{start:{line:19,column:8},end:{line:19,column:33}},"12":{start:{line:20,column:8},end:{line:20,column:44}},"13":{start:{line:21,column:8},end:{line:21,column:49}},"14":{start:{line:22,column:8},end:{line:22,column:47}},"15":{start:{line:23,column:8},end:{line:23,column:49}},"16":{start:{line:24,column:8},end:{line:24,column:35}},"17":{start:{line:25,column:8},end:{line:25,column:39}},"18":{start:{line:26,column:8},end:{line:26,column:33}},"19":{start:{line:27,column:8},end:{line:27,column:68}},"20":{start:{line:28,column:8},end:{line:28,column:25}},"21":{start:{line:29,column:8},end:{line:29,column:25}},"22":{start:{line:30,column:8},end:{line:30,column:22}},"23":{start:{line:31,column:8},end:{line:31,column:41}},"24":{start:{line:33,column:8},end:{line:33,column:31}},"25":{start:{line:34,column:29},end:{line:34,column:71}},"26":{start:{line:36,column:8},end:{line:36,column:127}},"27":{start:{line:38,column:8},end:{line:38,column:24}},"28":{start:{line:41,column:4},end:{line:126,column:6}},"29":{start:{line:42,column:24},end:{line:42,column:46}},"30":{start:{line:43,column:32},end:{line:43,column:62}},"31":{start:{line:44,column:31},end:{line:44,column:60}},"32":{start:{line:45,column:24},end:{line:45,column:46}},"33":{start:{line:48,column:25},end:{line:48,column:57}},"34":{start:{line:49,column:26},end:{line:49,column:58}},"35":{start:{line:50,column:25},end:{line:50,column:48}},"36":{start:{line:51,column:27},end:{line:51,column:52}},"37":{start:{line:52,column:29},end:{line:52,column:85}},"38":{start:{line:53,column:26},end:{line:53,column:34}},"39":{start:{line:54,column:26},end:{line:54,column:34}},"40":{start:{line:55,column:23},end:{line:55,column:31}},"41":{start:{line:56,column:30},end:{line:62,column:9}},"42":{start:{line:63,column:25},end:{line:63,column:232}},"43":{start:{line:64,column:8},end:{line:64,column:37}},"44":{start:{line:65,column:22},end:{line:65,column:49}},"45":{start:{line:66,column:8},end:{line:66,column:42}},"46":{start:{line:67,column:8},end:{line:67,column:51}},"47":{start:{line:68,column:8},end:{line:68,column:63}},"48":{start:{line:69,column:8},end:{line:69,column:58}},"49":{start:{line:71,column:8},end:{line:71,column:35}},"50":{start:{line:72,column:8},end:{line:72,column:44}},"51":{start:{line:73,column:8},end:{line:73,column:56}},"52":{start:{line:74,column:8},end:{line:74,column:44}},"53":{start:{line:76,column:8},end:{line:76,column:35}},"54":{start:{line:77,column:8},end:{line:77,column:44}},"55":{start:{line:78,column:8},end:{line:78,column:56}},"56":{start:{line:79,column:8},end:{line:79,column:44}},"57":{start:{line:81,column:8},end:{line:81,column:43}},"58":{start:{line:82,column:8},end:{line:82,column:52}},"59":{start:{line:83,column:8},end:{line:83,column:64}},"60":{start:{line:84,column:8},end:{line:84,column:60}},"61":{start:{line:86,column:8},end:{line:86,column:36}},"62":{start:{line:87,column:8},end:{line:87,column:45}},"63":{start:{line:88,column:8},end:{line:88,column:57}},"64":{start:{line:89,column:8},end:{line:89,column:46}},"65":{start:{line:91,column:8},end:{line:91,column:50}},"66":{start:{line:92,column:8},end:{line:92,column:59}},"67":{start:{line:93,column:8},end:{line:93,column:71}},"68":{start:{line:94,column:8},end:{line:94,column:61}},"69":{start:{line:96,column:8},end:{line:96,column:36}},"70":{start:{line:97,column:8},end:{line:97,column:45}},"71":{start:{line:98,column:8},end:{line:98,column:57}},"72":{start:{line:99,column:8},end:{line:99,column:46}},"73":{start:{line:101,column:8},end:{line:101,column:38}},"74":{start:{line:102,column:8},end:{line:102,column:47}},"75":{start:{line:103,column:8},end:{line:103,column:59}},"76":{start:{line:104,column:8},end:{line:104,column:50}},"77":{start:{line:106,column:8},end:{line:106,column:35}},"78":{start:{line:107,column:8},end:{line:107,column:44}},"79":{start:{line:108,column:8},end:{line:108,column:56}},"80":{start:{line:109,column:8},end:{line:109,column:44}},"81":{start:{line:111,column:8},end:{line:111,column:53}},"82":{start:{line:112,column:8},end:{line:112,column:61}},"83":{start:{line:113,column:8},end:{line:113,column:74}},"84":{start:{line:114,column:8},end:{line:114,column:72}},"85":{start:{line:115,column:8},end:{line:115,column:50}},"86":{start:{line:116,column:8},end:{line:116,column:59}},"87":{start:{line:117,column:8},end:{line:117,column:61}},"88":{start:{line:119,column:8},end:{line:119,column:50}},"89":{start:{line:120,column:8},end:{line:120,column:59}},"90":{start:{line:121,column:8},end:{line:121,column:61}},"91":{start:{line:123,column:8},end:{line:123,column:47}},"92":{start:{line:124,column:8},end:{line:124,column:56}},"93":{start:{line:125,column:8},end:{line:125,column:55}},"94":{start:{line:133,column:4},end:{line:139,column:6}},"95":{start:{line:134,column:19},end:{line:134,column:40}},"96":{start:{line:135,column:21},end:{line:135,column:23}},"97":{start:{line:137,column:8},end:{line:137,column:81}},"98":{start:{line:137,column:21},end:{line:137,column:35}},"99":{start:{line:138,column:8},end:{line:138,column:86}},"100":{start:{line:138,column:21},end:{line:138,column:40}},"101":{start:{line:141,column:4},end:{line:177,column:6}},"102":{start:{line:142,column:24},end:{line:142,column:46}},"103":{start:{line:143,column:32},end:{line:143,column:62}},"104":{start:{line:144,column:31},end:{line:144,column:60}},"105":{start:{line:145,column:24},end:{line:145,column:46}},"106":{start:{line:148,column:25},end:{line:148,column:57}},"107":{start:{line:149,column:26},end:{line:149,column:58}},"108":{start:{line:150,column:25},end:{line:150,column:48}},"109":{start:{line:151,column:27},end:{line:151,column:52}},"110":{start:{line:152,column:29},end:{line:152,column:85}},"111":{start:{line:153,column:26},end:{line:153,column:34}},"112":{start:{line:154,column:26},end:{line:154,column:34}},"113":{start:{line:155,column:23},end:{line:155,column:31}},"114":{start:{line:156,column:30},end:{line:162,column:9}},"115":{start:{line:163,column:19},end:{line:163,column:40}},"116":{start:{line:164,column:8},end:{line:164,column:16}},"117":{start:{line:167,column:8},end:{line:176,column:9}},"118":{start:{line:169,column:29},end:{line:169,column:232}},"119":{start:{line:170,column:12},end:{line:170,column:58}},"120":{start:{line:172,column:12},end:{line:172,column:20}},"121":{start:{line:173,column:12},end:{line:173,column:34}},"122":{start:{line:174,column:12},end:{line:174,column:60}},"123":{start:{line:175,column:12},end:{line:175,column:74}},"124":{start:{line:226,column:4},end:{line:226,column:60}},"125":{start:{line:226,column:16},end:{line:226,column:59}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:36},end:{line:13,column:37}},loc:{start:{line:13,column:42},end:{line:227,column:1}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:14,column:11},end:{line:14,column:12}},loc:{start:{line:14,column:17},end:{line:14,column:46}},line:14},"2":{name:"(anonymous_2)",decl:{start:{line:18,column:15},end:{line:18,column:16}},loc:{start:{line:18,column:26},end:{line:39,column:5}},line:18},"3":{name:"(anonymous_3)",decl:{start:{line:41,column:42},end:{line:41,column:43}},loc:{start:{line:41,column:53},end:{line:126,column:5}},line:41},"4":{name:"(anonymous_4)",decl:{start:{line:133,column:63},end:{line:133,column:64}},loc:{start:{line:133,column:74},end:{line:139,column:5}},line:133},"5":{name:"(anonymous_5)",decl:{start:{line:137,column:15},end:{line:137,column:16}},loc:{start:{line:137,column:21},end:{line:137,column:35}},line:137},"6":{name:"(anonymous_6)",decl:{start:{line:138,column:15},end:{line:138,column:16}},loc:{start:{line:138,column:21},end:{line:138,column:40}},line:138},"7":{name:"(anonymous_7)",decl:{start:{line:141,column:63},end:{line:141,column:64}},loc:{start:{line:141,column:74},end:{line:177,column:5}},line:141},"8":{name:"(anonymous_8)",decl:{start:{line:226,column:10},end:{line:226,column:11}},loc:{start:{line:226,column:16},end:{line:226,column:59}},line:226}},branchMap:{"0":{loc:{start:{line:23,column:17},end:{line:23,column:49}},type:"cond-expr",locations:[{start:{line:23,column:34},end:{line:23,column:39}},{start:{line:23,column:42},end:{line:23,column:49}}],line:23},"1":{loc:{start:{line:49,column:26},end:{line:49,column:58}},type:"cond-expr",locations:[{start:{line:49,column:43},end:{line:49,column:48}},{start:{line:49,column:51},end:{line:49,column:58}}],line:49},"2":{loc:{start:{line:149,column:26},end:{line:149,column:58}},type:"cond-expr",locations:[{start:{line:149,column:43},end:{line:149,column:48}},{start:{line:149,column:51},end:{line:149,column:58}}],line:149}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"f0edbc22e3118eebf40feca02c95e257b8eaeac9"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_willyrdoo.s[0]++;require('dotenv').config();const{env:{TEST_DB_URL}}=(cov_willyrdoo.s[1]++,process);const{expect}=(cov_willyrdoo.s[2]++,require('chai'));const{random}=(cov_willyrdoo.s[3]++,Math);const updateUser=(cov_willyrdoo.s[4]++,require('.'));const{errors:{NotFoundError,ContentError}}=(cov_willyrdoo.s[5]++,require('theatera-util'));const{ObjectId,database,models:{User,Notification}}=(cov_willyrdoo.s[6]++,require('theatera-data'));cov_willyrdoo.s[7]++;describe.only('logic - updateUser',()=>{cov_willyrdoo.f[0]++;cov_willyrdoo.s[8]++;before(()=>{cov_willyrdoo.f[1]++;cov_willyrdoo.s[9]++;return database.connect(TEST_DB_URL);});let userId,user,name,introduction,description,gender,age,phone,email,website,city,languages,height,weight,rol;cov_willyrdoo.s[10]++;beforeEach(async()=>{cov_willyrdoo.f[2]++;cov_willyrdoo.s[11]++;name=`name-${random()}`;cov_willyrdoo.s[12]++;email=`email-${random()}@mail.com`;cov_willyrdoo.s[13]++;introduction=`introduction-${random()}`;cov_willyrdoo.s[14]++;description=`description-${random()}`;cov_willyrdoo.s[15]++;gender=random()>0.5?(cov_willyrdoo.b[0][0]++,'MAN'):(cov_willyrdoo.b[0][1]++,'WOMAN');cov_willyrdoo.s[16]++;phone=`phone-${random()}`;cov_willyrdoo.s[17]++;website=`website-${random()}`;cov_willyrdoo.s[18]++;city=`city-${random()}`;cov_willyrdoo.s[19]++;languages=[`language-${random()}`,`language-${random()}`];cov_willyrdoo.s[20]++;height=random();cov_willyrdoo.s[21]++;weight=random();cov_willyrdoo.s[22]++;rol="PERSON";cov_willyrdoo.s[23]++;password=`password-${random()}`;cov_willyrdoo.s[24]++;await User.deleteMany();const specificInfo=(cov_willyrdoo.s[25]++,{languages,height,weight,gender,age});cov_willyrdoo.s[26]++;user=await User.create({name,password,introduction,description,phone,email,website,city,rol,specificInfo});cov_willyrdoo.s[27]++;userId=user.id;});cov_willyrdoo.s[28]++;it('should succeed on correct user ',async()=>{cov_willyrdoo.f[3]++;const newName=(cov_willyrdoo.s[29]++,`New-name-${random()}`);const newIntroduction=(cov_willyrdoo.s[30]++,`New-introduction-${random()}`);const newDescription=(cov_willyrdoo.s[31]++,`New-description-${random()}`);const newCity=(cov_willyrdoo.s[32]++,`new-City-${random()}`);const newEmail=(cov_willyrdoo.s[33]++,`new-email-${random()}@mail.com`);const newGender=(cov_willyrdoo.s[34]++,random()>0.5?(cov_willyrdoo.b[1][0]++,'MAN'):(cov_willyrdoo.b[1][1]++,'WOMAN'));const newPhone=(cov_willyrdoo.s[35]++,`new-phone-${random()}`);const newWebsite=(cov_willyrdoo.s[36]++,`new-website-${random()}`);const newLanguages=(cov_willyrdoo.s[37]++,[`new-language-${random()}`,`new-language-${random()}`]);const newHeight=(cov_willyrdoo.s[38]++,random());const newWeight=(cov_willyrdoo.s[39]++,random());const newAge=(cov_willyrdoo.s[40]++,random());const _specificInfo=(cov_willyrdoo.s[41]++,{languages:newLanguages,height:newHeight,weight:newWeight,gender:newGender,age:newAge});const response=(cov_willyrdoo.s[42]++,await updateUser(userId,{email:newEmail,phone:newPhone,website:newWebsite,specificInfo:_specificInfo,description:newDescription,introduction:newIntroduction,name:newName,city:newCity,rol}));cov_willyrdoo.s[43]++;expect(response).to.not.exist;const _user=(cov_willyrdoo.s[44]++,await User.findById(userId));cov_willyrdoo.s[45]++;expect(_user.description).to.exist;cov_willyrdoo.s[46]++;expect(_user.description).to.be.a('string');cov_willyrdoo.s[47]++;expect(_user.description).to.have.length.greaterThan(0);cov_willyrdoo.s[48]++;expect(_user.description).to.equal(newDescription);cov_willyrdoo.s[49]++;expect(_user.name).to.exist;cov_willyrdoo.s[50]++;expect(_user.name).to.be.a('string');cov_willyrdoo.s[51]++;expect(_user.name).to.have.length.greaterThan(0);cov_willyrdoo.s[52]++;expect(_user.name).to.equal(newName);cov_willyrdoo.s[53]++;expect(_user.city).to.exist;cov_willyrdoo.s[54]++;expect(_user.city).to.be.a('string');cov_willyrdoo.s[55]++;expect(_user.city).to.have.length.greaterThan(0);cov_willyrdoo.s[56]++;expect(_user.city).to.equal(newCity);cov_willyrdoo.s[57]++;expect(_user.introduction).to.exist;cov_willyrdoo.s[58]++;expect(_user.introduction).to.be.a('string');cov_willyrdoo.s[59]++;expect(_user.introduction).to.have.length.greaterThan(0);cov_willyrdoo.s[60]++;expect(_user.introduction).to.equal(newIntroduction);cov_willyrdoo.s[61]++;expect(_user.email).to.exist;cov_willyrdoo.s[62]++;expect(_user.email).to.be.a('string');cov_willyrdoo.s[63]++;expect(_user.email).to.have.length.greaterThan(0);cov_willyrdoo.s[64]++;expect(_user.email).to.equal(newEmail);cov_willyrdoo.s[65]++;expect(_user.specificInfo.gender).to.exist;cov_willyrdoo.s[66]++;expect(_user.specificInfo.gender).to.be.a('string');cov_willyrdoo.s[67]++;expect(_user.specificInfo.gender).to.have.length.greaterThan(0);cov_willyrdoo.s[68]++;expect(_user.specificInfo.gender).to.equal(newGender);cov_willyrdoo.s[69]++;expect(_user.phone).to.exist;cov_willyrdoo.s[70]++;expect(_user.phone).to.be.a('string');cov_willyrdoo.s[71]++;expect(_user.phone).to.have.length.greaterThan(0);cov_willyrdoo.s[72]++;expect(_user.phone).to.equal(newPhone);cov_willyrdoo.s[73]++;expect(_user.website).to.exist;cov_willyrdoo.s[74]++;expect(_user.website).to.be.a('string');cov_willyrdoo.s[75]++;expect(_user.website).to.have.length.greaterThan(0);cov_willyrdoo.s[76]++;expect(_user.website).to.equal(newWebsite);cov_willyrdoo.s[77]++;expect(_user.city).to.exist;cov_willyrdoo.s[78]++;expect(_user.city).to.be.a('string');cov_willyrdoo.s[79]++;expect(_user.city).to.have.length.greaterThan(0);cov_willyrdoo.s[80]++;expect(_user.city).to.equal(newCity);cov_willyrdoo.s[81]++;expect(_user.specificInfo.languages).to.exist;cov_willyrdoo.s[82]++;expect(_user.specificInfo.languages).to.be.a('array');cov_willyrdoo.s[83]++;expect(_user.specificInfo.languages).to.have.length.greaterThan(0);cov_willyrdoo.s[84]++;expect(_user.specificInfo.languages).to.deep.equal(newLanguages);cov_willyrdoo.s[85]++;expect(_user.specificInfo.weight).to.exist;cov_willyrdoo.s[86]++;expect(_user.specificInfo.weight).to.be.a('number');cov_willyrdoo.s[87]++;expect(_user.specificInfo.weight).to.equal(newWeight);cov_willyrdoo.s[88]++;expect(_user.specificInfo.height).to.exist;cov_willyrdoo.s[89]++;expect(_user.specificInfo.height).to.be.a('number');cov_willyrdoo.s[90]++;expect(_user.specificInfo.height).to.equal(newHeight);cov_willyrdoo.s[91]++;expect(_user.specificInfo.age).to.exist;cov_willyrdoo.s[92]++;expect(_user.specificInfo.age).to.be.a('number');cov_willyrdoo.s[93]++;expect(_user.specificInfo.age).to.equal(newAge);});cov_willyrdoo.s[94]++;it('should fail on unexisting user and correct task data',async()=>{cov_willyrdoo.f[4]++;const id=(cov_willyrdoo.s[95]++,ObjectId().toString());const data=(cov_willyrdoo.s[96]++,{});cov_willyrdoo.s[97]++;expect(()=>{cov_willyrdoo.f[5]++;cov_willyrdoo.s[98]++;return updateUser('');}).to.throw(ContentError,' is empty or blank');cov_willyrdoo.s[99]++;expect(()=>{cov_willyrdoo.f[6]++;cov_willyrdoo.s[100]++;return updateUser(' \t\r');}).to.throw(ContentError,' is empty or blank');});cov_willyrdoo.s[101]++;it('should fail on unexisting user and correct task data',async()=>{cov_willyrdoo.f[7]++;const newName=(cov_willyrdoo.s[102]++,`New-name-${random()}`);const newIntroduction=(cov_willyrdoo.s[103]++,`New-introduction-${random()}`);const newDescription=(cov_willyrdoo.s[104]++,`New-description-${random()}`);const newCity=(cov_willyrdoo.s[105]++,`new-City-${random()}`);const newEmail=(cov_willyrdoo.s[106]++,`new-email-${random()}@mail.com`);const newGender=(cov_willyrdoo.s[107]++,random()>0.5?(cov_willyrdoo.b[2][0]++,'MAN'):(cov_willyrdoo.b[2][1]++,'WOMAN'));const newPhone=(cov_willyrdoo.s[108]++,`new-phone-${random()}`);const newWebsite=(cov_willyrdoo.s[109]++,`new-website-${random()}`);const newLanguages=(cov_willyrdoo.s[110]++,[`new-language-${random()}`,`new-language-${random()}`]);const newHeight=(cov_willyrdoo.s[111]++,random());const newWeight=(cov_willyrdoo.s[112]++,random());const newAge=(cov_willyrdoo.s[113]++,random());const _specificInfo=(cov_willyrdoo.s[114]++,{languages:newLanguages,height:newHeight,weight:newWeight,gender:newGender,age:newAge});const id=(cov_willyrdoo.s[115]++,ObjectId().toString());cov_willyrdoo.s[116]++;debugger;cov_willyrdoo.s[117]++;try{const response=(cov_willyrdoo.s[118]++,await updateUser(id,{email:newEmail,phone:newPhone,website:newWebsite,specificInfo:_specificInfo,description:newDescription,introduction:newIntroduction,name:newName,city:newCity,rol}));cov_willyrdoo.s[119]++;throw new Error('should not reach this point');}catch(error){cov_willyrdoo.s[120]++;debugger;cov_willyrdoo.s[121]++;expect(error).to.exist;cov_willyrdoo.s[122]++;expect(error).to.be.an.instanceOf(NotFoundError);cov_willyrdoo.s[123]++;expect(error.message).to.equal(`user with id ${id} not found`);}});/*  it('should fail on correct user and unexisting task data', async() => {
         const taskId = ObjectId().toString()
         const newTitle = `new-title-${random()}`
         const newDescription = `new-description-${random()}`
         const newStatus = statuses.random()

         try {
             await updateUser(id, taskId, newTitle, newDescription, newStatus)

             throw new Error('should not reach this point')
         } catch (error) {
             expect(error).to.exist
             expect(error).to.be.an.instanceOf(NotFoundError)
             expect(error.message).to.equal(`user does not have task with id ${taskId}`)
         }
     })

     it('should fail on correct user and wrong task data', async() => {
         const { _id } = await Task.findOne({ _id: { $nin: taskIds.map(taskId => ObjectId(taskId)) } })

         const taskId = _id.toString()
         const newTitle = `new-title-${random()}`
         const newDescription = `new-description-${random()}`
         const newStatus = statuses.random()

         try {
             await updateUser(id, taskId, newTitle, newDescription, newStatus)

             throw new Error('should not reach this point')
         } catch (error) {
             expect(error).to.exist
             expect(error).to.be.an.instanceOf(ConflictError)
             expect(error.message).to.equal(`user with id ${id} does not correspond to task with id ${taskId}`)
         }
     })

     it('should fail on correct user and wrong task status', () => {
         const taskId = taskIds.random()
         const newTitle = `new-title-${random()}`
         const newDescription = `new-description-${random()}`
         const newStatus = 'wrong-status'

         expect(() => updateUser(id, taskId, newTitle, newDescription, newStatus)).to.throw(ContentError, `${newStatus} does not match any of the valid status values: ${statuses}`)
     }) */ // TODO other test cases
cov_willyrdoo.s[124]++;after(()=>{cov_willyrdoo.f[8]++;cov_willyrdoo.s[125]++;return User.deleteMany().then(database.disconnect);});});
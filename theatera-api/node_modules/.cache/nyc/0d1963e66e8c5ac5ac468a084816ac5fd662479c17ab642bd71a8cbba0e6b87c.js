var cov_1t93dz32qv=function(){var path="/home/martingarcia/Desktop/theatera-api/theatera-api/logic/check-friend-request/index.js";var hash="ea4214e1db2b07766d63fd81c52919b652752d3c";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/martingarcia/Desktop/theatera-api/theatera-api/logic/check-friend-request/index.js",statementMap:{"0":{start:{line:1,column:77},end:{line:1,column:101}},"1":{start:{line:2,column:68},end:{line:2,column:92}},"2":{start:{line:18,column:0},end:{line:72,column:1}},"3":{start:{line:19,column:4},end:{line:19,column:29}},"4":{start:{line:20,column:4},end:{line:20,column:49}},"5":{start:{line:21,column:4},end:{line:21,column:92}},"6":{start:{line:21,column:37},end:{line:21,column:92}},"7":{start:{line:23,column:4},end:{line:23,column:31}},"8":{start:{line:24,column:4},end:{line:24,column:53}},"9":{start:{line:25,column:4},end:{line:25,column:96}},"10":{start:{line:25,column:39},end:{line:25,column:96}},"11":{start:{line:26,column:4},end:{line:71,column:8}},"12":{start:{line:27,column:23},end:{line:27,column:52}},"13":{start:{line:28,column:8},end:{line:28,column:82}},"14":{start:{line:28,column:21},end:{line:28,column:82}},"15":{start:{line:30,column:25},end:{line:30,column:56}},"16":{start:{line:31,column:8},end:{line:31,column:86}},"17":{start:{line:31,column:23},end:{line:31,column:86}},"18":{start:{line:33,column:8},end:{line:33,column:79}},"19":{start:{line:33,column:55},end:{line:33,column:79}},"20":{start:{line:35,column:38},end:{line:35,column:134}},"21":{start:{line:36,column:8},end:{line:36,column:74}},"22":{start:{line:36,column:35},end:{line:36,column:74}},"23":{start:{line:38,column:40},end:{line:38,column:136}},"24":{start:{line:39,column:8},end:{line:58,column:9}},"25":{start:{line:40,column:25},end:{line:40,column:120}},"26":{start:{line:42,column:12},end:{line:42,column:100}},"27":{start:{line:42,column:23},end:{line:42,column:100}},"28":{start:{line:44,column:12},end:{line:44,column:57}},"29":{start:{line:45,column:12},end:{line:45,column:57}},"30":{start:{line:46,column:25},end:{line:46,column:33}},"31":{start:{line:48,column:26},end:{line:48,column:166}},"32":{start:{line:49,column:12},end:{line:49,column:44}},"33":{start:{line:51,column:26},end:{line:51,column:160}},"34":{start:{line:52,column:12},end:{line:52,column:46}},"35":{start:{line:54,column:12},end:{line:54,column:31}},"36":{start:{line:55,column:12},end:{line:55,column:33}},"37":{start:{line:57,column:12},end:{line:57,column:35}},"38":{start:{line:60,column:8},end:{line:68,column:9}},"39":{start:{line:61,column:12},end:{line:61,column:107}},"40":{start:{line:63,column:25},end:{line:63,column:202}},"41":{start:{line:64,column:12},end:{line:64,column:45}},"42":{start:{line:65,column:12},end:{line:65,column:33}},"43":{start:{line:67,column:12},end:{line:67,column:32}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:18,column:17},end:{line:18,column:18}},loc:{start:{line:18,column:48},end:{line:72,column:1}},line:18},"1":{name:"(anonymous_1)",decl:{start:{line:26,column:12},end:{line:26,column:13}},loc:{start:{line:26,column:23},end:{line:71,column:5}},line:26}},branchMap:{"0":{loc:{start:{line:21,column:4},end:{line:21,column:92}},type:"if",locations:[{start:{line:21,column:4},end:{line:21,column:92}},{start:{line:21,column:4},end:{line:21,column:92}}],line:21},"1":{loc:{start:{line:25,column:4},end:{line:25,column:96}},type:"if",locations:[{start:{line:25,column:4},end:{line:25,column:96}},{start:{line:25,column:4},end:{line:25,column:96}}],line:25},"2":{loc:{start:{line:28,column:8},end:{line:28,column:82}},type:"if",locations:[{start:{line:28,column:8},end:{line:28,column:82}},{start:{line:28,column:8},end:{line:28,column:82}}],line:28},"3":{loc:{start:{line:31,column:8},end:{line:31,column:86}},type:"if",locations:[{start:{line:31,column:8},end:{line:31,column:86}},{start:{line:31,column:8},end:{line:31,column:86}}],line:31},"4":{loc:{start:{line:33,column:8},end:{line:33,column:79}},type:"if",locations:[{start:{line:33,column:8},end:{line:33,column:79}},{start:{line:33,column:8},end:{line:33,column:79}}],line:33},"5":{loc:{start:{line:36,column:8},end:{line:36,column:74}},type:"if",locations:[{start:{line:36,column:8},end:{line:36,column:74}},{start:{line:36,column:8},end:{line:36,column:74}}],line:36},"6":{loc:{start:{line:39,column:8},end:{line:58,column:9}},type:"if",locations:[{start:{line:39,column:8},end:{line:58,column:9}},{start:{line:39,column:8},end:{line:58,column:9}}],line:39},"7":{loc:{start:{line:42,column:12},end:{line:42,column:100}},type:"if",locations:[{start:{line:42,column:12},end:{line:42,column:100}},{start:{line:42,column:12},end:{line:42,column:100}}],line:42},"8":{loc:{start:{line:60,column:8},end:{line:68,column:9}},type:"if",locations:[{start:{line:60,column:8},end:{line:68,column:9}},{start:{line:60,column:8},end:{line:68,column:9}}],line:60},"9":{loc:{start:{line:60,column:12},end:{line:60,column:62}},type:"binary-expr",locations:[{start:{line:60,column:12},end:{line:60,column:34}},{start:{line:60,column:38},end:{line:60,column:62}}],line:60}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"ea4214e1db2b07766d63fd81c52919b652752d3c"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{validate,errors:{ContentError,NotFoundError,ConflictError}}=(cov_1t93dz32qv.s[0]++,require('theatera-util'));const{ObjectId,models:{User,FriendRequest,Notification}}=(cov_1t93dz32qv.s[1]++,require('theatera-data'));/**
 *
 * Checks the status of a friend request, 3 ways:
 *      - First friendRequest -> send notification to receiver user
 *      - Retried of a friend request -> nothing to do
 *      - Reciprocal friend request -> connect both user,
 *           and send notifications to both users
 * 
 * @param {ObjectId} emiterId
 * @param {ObjectId} receiverId
 * 
 * @returns {String}
 */cov_1t93dz32qv.s[2]++;module.exports=function(emiterId,receiverId){cov_1t93dz32qv.f[0]++;cov_1t93dz32qv.s[3]++;validate.string(emiterId);cov_1t93dz32qv.s[4]++;validate.string.notVoid('emiterId',emiterId);cov_1t93dz32qv.s[5]++;if(!ObjectId.isValid(emiterId)){cov_1t93dz32qv.b[0][0]++;cov_1t93dz32qv.s[6]++;throw new ContentError(`${emiterId} is not a valid id`);}else{cov_1t93dz32qv.b[0][1]++;}cov_1t93dz32qv.s[7]++;validate.string(receiverId);cov_1t93dz32qv.s[8]++;validate.string.notVoid('receiverId',receiverId);cov_1t93dz32qv.s[9]++;if(!ObjectId.isValid(receiverId)){cov_1t93dz32qv.b[1][0]++;cov_1t93dz32qv.s[10]++;throw new ContentError(`${receiverId} is not a valid id`);}else{cov_1t93dz32qv.b[1][1]++;}cov_1t93dz32qv.s[11]++;return(async()=>{cov_1t93dz32qv.f[1]++;const emiter=(cov_1t93dz32qv.s[12]++,await User.findById(emiterId));cov_1t93dz32qv.s[13]++;if(!emiter){cov_1t93dz32qv.b[2][0]++;cov_1t93dz32qv.s[14]++;throw new NotFoundError(`user with id ${emiterId} not found`);}else{cov_1t93dz32qv.b[2][1]++;}const receiver=(cov_1t93dz32qv.s[15]++,await User.findById(receiverId));cov_1t93dz32qv.s[16]++;if(!receiver){cov_1t93dz32qv.b[3][0]++;cov_1t93dz32qv.s[17]++;throw new NotFoundError(`user with id ${receiverId} not found`);}else{cov_1t93dz32qv.b[3][1]++;}cov_1t93dz32qv.s[18]++;if(emiter.connections.includes(receiver._id)){cov_1t93dz32qv.b[4][0]++;cov_1t93dz32qv.s[19]++;return"already friends";}else{cov_1t93dz32qv.b[4][1]++;}const repeatedFriendRequest=(cov_1t93dz32qv.s[20]++,await FriendRequest.findOne({"creator":ObjectId(emiterId),"receiver":ObjectId(receiverId)}));cov_1t93dz32qv.s[21]++;if(repeatedFriendRequest){cov_1t93dz32qv.b[5][0]++;cov_1t93dz32qv.s[22]++;return"Still waiting for confirmation";}else{cov_1t93dz32qv.b[5][1]++;}const reciprocalFriendRequest=(cov_1t93dz32qv.s[23]++,await FriendRequest.findOne({"creator":ObjectId(receiverId),"receiver":ObjectId(emiterId)}));cov_1t93dz32qv.s[24]++;if(reciprocalFriendRequest){cov_1t93dz32qv.b[6][0]++;const drop=(cov_1t93dz32qv.s[25]++,await FriendRequest.remove({"creator":ObjectId(receiverId),"receiver":ObjectId(emiterId)}));cov_1t93dz32qv.s[26]++;if(!drop){cov_1t93dz32qv.b[7][0]++;cov_1t93dz32qv.s[27]++;throw new ConflictError("internal error, removing an existing friendRequest");}else{cov_1t93dz32qv.b[7][1]++;}cov_1t93dz32qv.s[28]++;emiter.connections.push(ObjectId(receiverId));cov_1t93dz32qv.s[29]++;receiver.connections.push(ObjectId(emiterId));const date=(cov_1t93dz32qv.s[30]++,new Date());const noti1=(cov_1t93dz32qv.s[31]++,new Notification({body:{message:"new friend",name:receiver.name,image:receiver.image,id:receiver.id,type:'CONNECTION',date}}));cov_1t93dz32qv.s[32]++;emiter.notifications.push(noti1);const noti2=(cov_1t93dz32qv.s[33]++,new Notification({body:{message:"new friend",name:emiter.name,image:emiter.image,id:emiter.id,type:'CONNECTION',date}}));cov_1t93dz32qv.s[34]++;receiver.notifications.push(noti2);cov_1t93dz32qv.s[35]++;await emiter.save();cov_1t93dz32qv.s[36]++;await receiver.save();cov_1t93dz32qv.s[37]++;return"new connection";}else{cov_1t93dz32qv.b[6][1]++;}cov_1t93dz32qv.s[38]++;if((cov_1t93dz32qv.b[9][0]++,!repeatedFriendRequest)&&(cov_1t93dz32qv.b[9][1]++,!reciprocalFriendRequest)){cov_1t93dz32qv.b[8][0]++;cov_1t93dz32qv.s[39]++;await FriendRequest.create({"creator":ObjectId(emiterId),"receiver":ObjectId(receiverId)});const noti=(cov_1t93dz32qv.s[40]++,new Notification({body:{message:"friendRequest",name:emiter.name,introduction:emiter.introduction,image:emiter.image,id:emiter.id,type:'REQUEST',date:new Date()}}));cov_1t93dz32qv.s[41]++;receiver.notifications.push(noti);cov_1t93dz32qv.s[42]++;await receiver.save();cov_1t93dz32qv.s[43]++;return"new request";}else{cov_1t93dz32qv.b[8][1]++;}})();};